{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww6000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 PA3 TESTCASES\
\
Test 1:\
    free(NULL);\
    return 0;\
Output:\
pointer is NULL \
 Error occurred at line 5 in file test1.c \
\
-------------------------------------------------------------------------------------------\
\
Test 2:\
  \
    int i;\
    for(i = 0; i < 5; i++)\
    \{\
        int* p = malloc(sizeof(int));\
        *p = i;\
        printf("address is %p, value is %d\\n",p, *p);\
    \}\
    return 0;\
\
Output:\
	address is 0x105da5058, value is 0\
	address is 0x105da5074, value is 1\
	address is 0x105da5090, value is 2\
	address is 0x105da50ac, value is 3\
	address is 0x105da50c8, value is 4\
--------------------------------------------------------------------------------------------\
\
Test 3:\
    int* p = malloc(sizeof(int));\
    *p = 5;\
    printf("address is %p, value is %d\\n",p, *p);\
    free(p);\
    return 0;\
\
Output:\
	address is 0x102c59058, value is 5\
	\
---------------------------------------------------------------------------------------------\
\
Test 4:\
	char* p = (char *)malloc( 60000 );\
	return 0;\
\
Output:\
	theres no space left to allocate anything else \
 	Error occurred at line 5 in file test4.c\
------------------------------------------------------------------------------------------\
\
Test 5:\
    printf("redundant freeing\\n");\
    void* p = malloc(10);\
    free(p);\
    free(p);\
    return 0;\
\
Output:\
	pointer you are trying to free has already been freed \
 	Error occurred at line 8 in file test5.c\
-------------------------------------------------------------------------------------------\
\
Test 6:\
    \
    printf("pointers that were never allocated\\n");\
    int x;\
    free( &x );\
    return 0;\
\
Output:\
    Error occurred at line 7 in file test6.c --------------------------------------------------------------------------------------------\
\
Test 7:\
 \
	char* p = (char *)malloc( 100 );\
	free( p );\
	p = (char *)malloc( 100 );\
	free( p );\
	free(p);\
	return 0;\
\
	\
Output 7:\
	 pointer you are trying to free has already been freed \
	 Error occurred at line 9 in file test7.c\
----------------------------------------------------------------------------------------------\
\
Test 8:\
\
	int *p, i;\
	p = malloc(sizeof(int) * 7);\
	\
	for(i = 0; i < 7; i++)\{\
		p[i] = 3;\
	\} \
	\
	for(i = 0; i < 7; i++)\{\
		printf("The value at %d is %d \\n", i, p[i]);\
	\}	\
\
	return 0;\
\
\
Output:\
	The value at 0 is 3 \
The value at 1 is 3 \
The value at 2 is 3 \
The value at 3 is 3 \
The value at 4 is 3 \
The value at 5 is 3 \
The value at 6 is 3 \
\
-----------------------------------------------------------------------------------------------\
\
test9:\
\
	char* p = (char *)malloc( 100 );\
	free( p );\
	p = (char *)malloc( 100 );\
	free( p );\
\
	return 0;\
Output:\
  \
	returns nothing because this is good \
--------------------------------------------------------------------------------------------------\
\
Test10:\
    \
	int *p;\
	p = malloc(sizeof(int*));\
	free(p + 100);\
	return 0;\
Output:\
	this pointer was never returned from malloc \
 	Error occurred at line 7 in file test10.c \
\
--------------------------------------------------------------------------------------------------\
\
Test11:\
\
	printf("for not returned from  malloc \\n");\
        char * p;\
	p = (char *)malloc( 200 ); \
        free( p + 10 );\
	return 0;\
   \
Output:\
	\
	this pointer was never returned from malloc \
	Error occurred at line 8 in file test11.c \
\
--------------------------------------------------------------------------------------------------\
\
Test12:\
	char* p = (char *)malloc( 100 );\
	char* x = (char *)malloc( 100 );\
	free( p +10);\
	return 0;\
\
Output:\
	this pointer was never returned from malloc \
	Error occurred at line 7 in file test12.c }